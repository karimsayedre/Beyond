#pragma once

namespace Beyond::RendererUtils {
	enum AccessFlagBits
	{
		INDIRECT_COMMAND_READ_BIT = 0x00000001,
		INDEX_READ_BIT = 0x00000002,
		VERTEX_ATTRIBUTE_READ_BIT = 0x00000004,
		UNIFORM_READ_BIT = 0x00000008,
		INPUT_ATTACHMENT_READ_BIT = 0x00000010,
		SHADER_READ_BIT = 0x00000020,
		SHADER_WRITE_BIT = 0x00000040,
		COLOR_ATTACHMENT_READ_BIT = 0x00000080,
		COLOR_ATTACHMENT_WRITE_BIT = 0x00000100,
		DEPTH_STENCIL_ATTACHMENT_READ_BIT = 0x00000200,
		DEPTH_STENCIL_ATTACHMENT_WRITE_BIT = 0x00000400,
		TRANSFER_READ_BIT = 0x00000800,
		TRANSFER_WRITE_BIT = 0x00001000,
		HOST_READ_BIT = 0x00002000,
		HOST_WRITE_BIT = 0x00004000,
		MEMORY_READ_BIT = 0x00008000,
		MEMORY_WRITE_BIT = 0x00010000,
		NONE = 0,
		TRANSFORM_FEEDBACK_WRITE_BIT_EXT = 0x02000000,
		TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT = 0x04000000,
		TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT = 0x08000000,
		CONDITIONAL_RENDERING_READ_BIT_EXT = 0x00100000,
		COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT = 0x00080000,
		ACCELERATION_STRUCTURE_READ_BIT_KHR = 0x00200000,
		ACCELERATION_STRUCTURE_WRITE_BIT_KHR = 0x00400000,
		FRAGMENT_DENSITY_MAP_READ_BIT_EXT = 0x01000000,
		FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR = 0x00800000,
		COMMAND_PREPROCESS_READ_BIT_NV = 0x00020000,
		COMMAND_PREPROCESS_WRITE_BIT_NV = 0x00040000,
		NONE_KHR = 0,
		FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
	};

	enum ImageLayout
	{
		IMAGE_LAYOUT_UNDEFINED = 0,
		IMAGE_LAYOUT_GENERAL = 1,
		IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL = 2,
		IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL = 3,
		IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL = 4,
		IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL = 5,
		IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL = 6,
		IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL = 7,
		IMAGE_LAYOUT_PREINITIALIZED = 8,
		IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL = 1000117000,
		IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL = 1000117001,
		IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL = 1000241000,
		IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL = 1000241001,
		IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL = 1000241002,
		IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL = 1000241003,
		IMAGE_LAYOUT_READ_ONLY_OPTIMAL = 1000314000,
		IMAGE_LAYOUT_ATTACHMENT_OPTIMAL = 1000314001,
		IMAGE_LAYOUT_PRESENT_SRC_KHR = 1000001002,
		IMAGE_LAYOUT_VIDEO_DECODE_DST_KHR = 1000024000,
		IMAGE_LAYOUT_VIDEO_DECODE_SRC_KHR = 1000024001,
		IMAGE_LAYOUT_VIDEO_DECODE_DPB_KHR = 1000024002,
		IMAGE_LAYOUT_SHARED_PRESENT_KHR = 1000111000,
		IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT = 1000218000,
		IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR = 1000164003,
		IMAGE_LAYOUT_RENDERING_LOCAL_READ_KHR = 1000232000,
		IMAGE_LAYOUT_VIDEO_ENCODE_DST_KHR = 1000299000,
		IMAGE_LAYOUT_VIDEO_ENCODE_SRC_KHR = 1000299001,
		IMAGE_LAYOUT_VIDEO_ENCODE_DPB_KHR = 1000299002,
		IMAGE_LAYOUT_ATTACHMENT_FEEDBACK_LOOP_OPTIMAL_EXT = 1000339000,
		IMAGE_LAYOUT_MAX_ENUM = 0x7FFFFFFF
	};

	enum PipelineStageFlagBits
	{
		VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT = 0x00000001,
		VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT = 0x00000002,
		VK_PIPELINE_STAGE_VERTEX_INPUT_BIT = 0x00000004,
		VK_PIPELINE_STAGE_VERTEX_SHADER_BIT = 0x00000008,
		VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT = 0x00000010,
		VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT = 0x00000020,
		VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT = 0x00000040,
		VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT = 0x00000080,
		VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT = 0x00000100,
		VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT = 0x00000200,
		VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT = 0x00000400,
		VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT = 0x00000800,
		VK_PIPELINE_STAGE_TRANSFER_BIT = 0x00001000,
		VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT = 0x00002000,
		VK_PIPELINE_STAGE_HOST_BIT = 0x00004000,
		VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT = 0x00008000,
		VK_PIPELINE_STAGE_ALL_COMMANDS_BIT = 0x00010000,
		VK_PIPELINE_STAGE_NONE = 0,
		VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT = 0x01000000,
		VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT = 0x00040000,
		VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR = 0x02000000,
		VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR = 0x00200000,
		VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT = 0x00800000,
		VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR = 0x00400000,
		VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV = 0x00020000,
		VK_PIPELINE_STAGE_TASK_SHADER_BIT_EXT = 0x00080000,
		VK_PIPELINE_STAGE_MESH_SHADER_BIT_EXT = 0x00100000,
		VK_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV = VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR,
		VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV = VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR,
		VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV = VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR,
		VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV = VK_PIPELINE_STAGE_TASK_SHADER_BIT_EXT,
		VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV = VK_PIPELINE_STAGE_MESH_SHADER_BIT_EXT,
		VK_PIPELINE_STAGE_NONE_KHR = VK_PIPELINE_STAGE_NONE,
		VK_PIPELINE_STAGE_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
	};

	enum ImageAspectFlagBits
	{
		VK_IMAGE_ASPECT_COLOR_BIT = 0x00000001,
		VK_IMAGE_ASPECT_DEPTH_BIT = 0x00000002,
		VK_IMAGE_ASPECT_STENCIL_BIT = 0x00000004,
		VK_IMAGE_ASPECT_METADATA_BIT = 0x00000008,
		VK_IMAGE_ASPECT_PLANE_0_BIT = 0x00000010,
		VK_IMAGE_ASPECT_PLANE_1_BIT = 0x00000020,
		VK_IMAGE_ASPECT_PLANE_2_BIT = 0x00000040,
		VK_IMAGE_ASPECT_NONE = 0,
		VK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT = 0x00000080,
		VK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT = 0x00000100,
		VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT = 0x00000200,
		VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT = 0x00000400,
		VK_IMAGE_ASPECT_PLANE_0_BIT_KHR = VK_IMAGE_ASPECT_PLANE_0_BIT,
		VK_IMAGE_ASPECT_PLANE_1_BIT_KHR = VK_IMAGE_ASPECT_PLANE_1_BIT,
		VK_IMAGE_ASPECT_PLANE_2_BIT_KHR = VK_IMAGE_ASPECT_PLANE_2_BIT,
		VK_IMAGE_ASPECT_NONE_KHR = VK_IMAGE_ASPECT_NONE,
		VK_IMAGE_ASPECT_FLAG_BITS_MAX_ENUM = 0x7FFFFFFF
	};

	struct ImageSubresourceRange
	{
		ImageAspectFlagBits    aspectMask;
		uint32_t              baseMipLevel;
		uint32_t              levelCount;
		uint32_t              baseArrayLayer;
		uint32_t              layerCount;
	};

	struct ImageBarrier
	{
		RendererUtils::AccessFlagBits srcAccessMask;
		RendererUtils::AccessFlagBits dstAccessMask;
		RendererUtils::ImageLayout oldImageLayout;
		RendererUtils::ImageLayout newImageLayout;
		RendererUtils::PipelineStageFlagBits srcStageMask;
		RendererUtils::PipelineStageFlagBits dstStageMask;
		RendererUtils::ImageSubresourceRange subresourceRange;
	};
}
